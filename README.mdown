# Integrate V-Play with Existing Apps

This guide describes how to integrate V-Play into existing Android projects.

*V-Play Native Integration* comes as an Android aar library file.
You can add it as a regular maven dependency.

1. Add the vplay-android dependency in your build.gradle file:

	```groovy
	dependencies {
		implementation 'net.vplay:vplay-android:2.18.1'
	}
	```

2. Add the V-Play Maven repository at the repositories block:

	```groovy 
	repositories {
        maven { url 'https://github.com/V-Play/VPlayAndroid/raw/master/maven/' }
	}
	```

3. Set the base class of any Activity that includes V-Play to `VPlayAndroidActivity`

4. Add `VPlayAndroidFragment` in layout or in source.
	1. From XML layout:
	
		```xml
		<fragment
		    android:id="@+id/qt_fragment_container"
		    class="net.vplay.ui.VPlayAndroidFragment"
		    android:layout_width="match_parent"
		    android:layout_height="match_parent"
		    app:qml_source="@raw/Main"/>
		```
	
	2. From source:

		```java
		getFragmentManager().beginTransaction()
		    .replace(R.id.qt_fragment_container, new VPlayAndroidFragment()
		       .setQmlSource(getApplicationContext(),
		          URI.create("file://android_asset/qml/Main.qml")
		       ), null)
		     .addToBackStack(null)
		     .commit();
		```

	Note: `R.id.qt_fragment_container` must be a view in the current activity.

## Example Application

The folder `NativeIntegrationExample` contains a complete Android example project
making use of VPlayAndroid.
You can open it directly in Android Studio.
	